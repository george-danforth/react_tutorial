const element = document.createElement(tagName) creates an HTML element

element.style = "background-color: blue" sets the background-color to blue

element.className = "container" sets the class of the element to: container

multiple classes can be set by separating them with a space character: element.className = "container center"

////////
A React Element is the smallest building block.

React.createElement returns a React Element

React.createElement(type, {props}, children)

////////
ReactDOM is the glue between React and the DOM.

ReactDOM is separate from React because you can write React for native applications.

Reconciliation is the process of syncing the Virtual DOM to the actual DOM.

////////
Install ReactDOM with npm install react-dom

Only createRoot method is required to use react-dom

Import ReactDOM's createRoot method with import {createRoot} from "react-dom/client"

ReactDOM weighs 130KB when imported. React weighs 6KB when imported. Total weight 136KB.

The root element is where ReactDOM will render your UI

createRoot(root).render(element);

////////

ReactDOM completely manages the root element

You should not directly change/update the content of the root element

Apps built with React have a single root element (The most common use case)

Existing Apps that integrate React to make a feature interactive could have more than one root.
